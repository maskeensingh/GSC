import json
import requests

# Replace with your Groq API endpoint and API key
GROQ_API_URL = "https://api.groq.com/v1/chat/completions"
GROQ_API_KEY = "your_groq_api_key_here"

def generate_questions_with_llm(disease_name):
    # Define the prompt for the LLM
    prompt = (
        f"You are a medical expert skin specialist. Your patient is poor, less educated, and can't afford to come to you. "
        f"The patient says he has {disease_name} disease, but you are not sure he has that disease only. "
        "Generate a set of all questions you would want to ask the patient to get a better idea of his disease and treat him online. "
        "I want you to generate a JSON which I can use in my frontend to generate questions for the user. "
        "The JSON should have two keys: 'disease_name' and 'questions'. 'questions' should be a list of strings."
    )

    # Define the payload for the API request
    payload = {
        "model": "mixtral-8x7b-32768",  # Replace with the model you're using
        "messages": [{"role": "user", "content": prompt}],
        "temperature": 0.7,
        "max_tokens": 500,
        "response_format": {"type": "json_object"}
    }

    # Headers for the API request
    headers = {
        "Authorization": f"Bearer {GROQ_API_KEY}",
        "Content-Type": "application/json"
    }

    # Send the request to the Groq API
    response = requests.post(GROQ_API_URL, headers=headers, json=payload)

    # Check if the request was successful
    if response.status_code == 200:
        # Parse the JSON response
        llm_response = response.json()
        # Extract the generated JSON from the LLM's response
        generated_json = llm_response["choices"][0]["message"]["content"]
        return json.loads(generated_json)
    else:
        print(f"Error: {response.status_code} - {response.text}")
        return None

def main():
    # Input disease name
    disease_name = input("Enter the disease name: ")

    # Generate questions using the LLM
    questions_json = generate_questions_with_llm(disease_name)

    if questions_json:
        # Print the JSON output
        print(json.dumps(questions_json, indent=4))
    else:
        print("Failed to generate questions.")

if __name__ == "__main__":
    main()